#! /usr/bin/env python

# Script to do various things with all the supervisor processes on
# the nodes.

import sys
import xmlrpclib
import threading

from optparse import OptionParser
parser = OptionParser(usage="Usage: %prog [options] command")
parser.add_option("-L","--list-cmds",action="store_true",dest="list",
        help="List commands then exit", default=False)
(opt,arg) = parser.parse_args()

cmds = {
        "start": "Start yuppi programs",
        "stop":  "Stop yuppi programs",
        "start_status": "Start yuppi_status daemon",
        "stop_status":  "Stop yuppi_status daemon",
        "shutdown": "Shutdown supervisor"
        }

def node_command(node, cmd):
    try:
        sup = xmlrpclib.Server("http://%s:9200" % node)
        if cmd=='shutdown':
            sup.supervisor.shutdown()
        elif cmd=='start':
            sup.supervisor.startProcessGroup('yuppi')
        elif cmd=='stop':
            sup.supervisor.stopProcessGroup('yuppi')
        elif cmd=='start_status':
            sup.supervisor.startProcess('yuppi_status')
        elif cmd=='stop_status':
            sup.supervisor.stopProcess('yuppi_status')
        else:
            print "Invalid command '%s'" % cmd
    except:
        print "Error on %s" % node

if opt.list:
    print "%10s  %s" % ("command", "description")
    for (k,v) in cmds.items():
        print "%10s  %s" % (k, v)
    sys.exit(0)

if len(arg)==0:
    parser.print_help()
    sys.exit(0)

cmd = arg[0]
if cmd not in cmds.keys():
    print "Invalid command '%s'" % cmd
    print "Commands: " + str(cmds.keys())
    sys.exit(1)

nodes = ["cbe-node-%02d" % i for i in range(1,33)]

node_threads = []
for node in nodes:
    node_threads.append(threading.Thread(target=node_command,args=(node,cmd)))

for t in node_threads: t.start()
for t in node_threads: t.join()
